// @import url("https://fonts.googleapis.com/css2?family=Libre+Franklin:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
// @import url("https://fonts.googleapis.com/css2?family=Chakra+Petch:ital,wght@0,300;0,400;0,500;0,600;0,700;1,300;1,400;1,500;1,600;1,700&display=swap");
/// $primary-font-color: #ffffff !global;

@import "scss/mixins";
@import "scss/utils";
body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Libre Franklin", sans-serif;
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
}
/*
  3. Allow percentage-based heights in the application
*/
html,
body {
  height: 100%;
}
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}
//set 1rem = 10px
html {
  font-size: 50%;

  @include bp(tablet) {
    font-size: 62.5%;
  }
}

body {
  color: #ffffff;
}

@mixin links($link, $visited, $hover, $active) {
  & {
    color: $link;
    &:visited {
      color: $visited;
    }
    &:hover {
      color: $hover;
    }
    &:active,
    &:focus {
      color: $active;
    }
  }
}

a {
  @include links(#fff, #fff, #fff, #fff);
}

a.btn:link,
a.btn:visited {
  --max: 2.4rem;

  text-transform: uppercase;
  font-size: 1.4rem;
  padding-block: 1em;
  padding-inline: 2.2em;
  text-decoration: none;
  font-weight: 500;
  font-style: italic;
  border: 1px solid currentColor;
  border-radius: 50px;

  span {
    display: inline-block;
    margin-left: 4px;
    transition: margin-left 0.2s;
  }

  @include bp(max) {
    font-size: var(--max);
  }
}

a.btn:hover,
a.btn:active {
  span {
    margin-left: 8px;
  }
}

.glow-on-hover {
  --btn-border-radius: 50px;
  border: none;
  outline: none;
  color: #fff;
  background: #111;
  cursor: pointer;
  position: relative;
  z-index: 0;
  border-radius: var(--btn-border-radius);
}

.glow-on-hover:before {
  content: "";
  background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);
  position: absolute;
  top: -2px;
  left: -2px;
  background-size: 400%;
  z-index: -1;
  filter: blur(5px);
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  animation: glowing 20s linear infinite;
  opacity: 0;
  will-change: opacity;
  transition: opacity 0.3s ease-in-out;
  border-radius: var(--btn-border-radius);
}

.glow-on-hover:active {
  color: #000;
}

.glow-on-hover:active:after {
  background: transparent;
}

.glow-on-hover:hover:before {
  opacity: 1;
}

.glow-on-hover:after {
  z-index: -1;
  content: "";
  position: absolute;
  width: 100%;
  height: 100%;
  background: #111;
  left: 0;
  top: 0;
  border-radius: var(--btn-border-radius);
}

@keyframes glowing {
  0% {
    background-position: 0 0;
  }
  50% {
    background-position: 400% 0;
  }
  100% {
    background-position: 0 0;
  }
}

//utils

.heading--1 {
  --max: 15.8rem;
  --min: 5.6rem;

  font-size: var(--min);
  line-height: 30px;
  font-weight: 700;
  color: currentColor;
  @include bp(desktop) {
    font-size: clamp(10rem, 6vw, var(--max));
    line-height: 100px;
  }
}

.heading--2 {
  --max: 9.2rem;
  --min: 2.6rem;
  font-weight: 600;
  font-size: var(--min);
  @include bp(desktop) {
    font-size: clamp(7rem, 6vw, var(--max));
  }
}

.home {
  min-height: 100vh;
  min-height: 100dvh;
  display: grid;
  grid: auto/auto;

  .footer {
    margin-top: auto;
    grid-column: -1;
  }
}
